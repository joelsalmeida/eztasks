import type { NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useState, createContext } from 'react';

import Todo from '../components/Todo';
import { ITodo } from '../interfaces/TodoInterfaces';
import TodoForm from '../components/TodoForm';
import UpdateTodoForm from '../components/UpdateTodoForm';
import { getTodoRequest } from '../helpers/requests';

interface ITodoContext {
  isActive: boolean;
  setIsActive: Function;
  setId: Function;
  id: string | undefined;
}

export const TodoContext = createContext({} as ITodoContext);

const Todos: NextPage = () => {
  const [todos, setTodos] = useState([]);
  const [isActive, setIsActive] = useState(false);
  const [id, setId] = useState(undefined);

  useEffect(() => {
    getTodoRequest('todos').then((todos) => setTodos(todos));
  }, []);

  return (
    <TodoContext.Provider value={{ isActive, setIsActive, id, setId }}>
      <div>
        <Head>
          <title>Eztodos : Tasks</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main>
          <TodoForm />

          <table>
            <caption>EzTodos</caption>

            <thead>
              <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Status</th>
              </tr>
            </thead>

            <tbody>
              {todos.map((todo: ITodo) => (
                <Todo key={todo.id} {...todo} />
              ))}
            </tbody>
          </table>

          <UpdateTodoForm />
        </main>
      </div>
    </TodoContext.Provider>
  );
};

export default Todos;
